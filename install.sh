#!/usr/bin/env bash
# zeek-install-geoip.sh
# Tested on Ubuntu 24.04 LTS (Noble)

set -euo pipefail

# --------------------------
# Config & defaults
# --------------------------
IFACE="eno2"
MAXMIND_ACCOUNT_ID="${MAXMIND_ACCOUNT_ID:-}"
MAXMIND_LICENSE_KEY="${MAXMIND_LICENSE_KEY:-}"
MMDB_DIR="/usr/share/GeoIP"

ZEEK_REPO_LIST="/etc/apt/sources.list.d/security:zeek.list"
ZEEK_REPO_URL="http://download.opensuse.org/repositories/security:/zeek/xUbuntu_24.04/"
ZEEK_KEY_DST="/etc/apt/trusted.gpg.d/security_zeek.gpg"

# --------------------------
# Helper functions
# --------------------------
log(){ echo -e "\e[1;32m[+] $*\e[0m"; }
warn(){ echo -e "\e[1;33m[!] $*\e[0m"; }
die(){ echo -e "\e[1;31m[âœ—] $*\e[0m"; exit 1; }

require_root(){
  if [[ $EUID -ne 0 ]]; then
    die "Run as root (use sudo)."
  fi
}

detect_iface(){
  # pick the first non-loopback, UP interface with an IPv4 address
  ip -o link show | awk -F': ' '$2!="lo"{print $2}' | while read -r nic; do
    if ip -o addr show dev "$nic" | grep -q "inet "; then
      state=$(ip -o link show dev "$nic" | grep -o "state [A-Z]*" | awk '{print $2}')
      if [[ "$state" == "UP" ]]; then
        echo "$nic"; return
      fi
    fi
  done
}

append_once(){
  local line="$1" file="$2"
  grep -Fqx "$line" "$file" 2>/dev/null || echo "$line" >> "$file"
}

# --------------------------
# 0) Pre-flight
# --------------------------
require_root
if ! grep -qi "Ubuntu 24\.04" /etc/os-release; then
  warn "This script is designed for Ubuntu 24.04; continuing anyway."
fi

# --------------------------
# 1) Base packages
# --------------------------
log "Updating APT and base tooling..."
apt-get update -y
DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
  ca-certificates curl gnupg lsb-release jq

# --------------------------
# 2) Add Zeek OBS repository
# --------------------------
if [[ ! -f "$ZEEK_REPO_LIST" ]]; then
  log "Adding Zeek OBS repository..."
  echo "deb $ZEEK_REPO_URL /" > "$ZEEK_REPO_LIST"
  curl -fsSL "${ZEEK_REPO_URL%/}/Release.key" | gpg --dearmor > "$ZEEK_KEY_DST"
else
  log "Zeek repository already present."
fi

# --------------------------
# 3) Install Zeek + deps
# --------------------------
log "Installing Zeek and dependencies..."
apt-get update -y
DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
  zeek zeek-core libpcap0.8 libmaxminddb0 libmaxminddb-dev geoipupdate

# Quick sanity check: ensure Zeek has GeoIP support (Zeek 6.2+ exposes this)
ZEEK_CONFIG="$ZEEK_PREFIX/bin/zeek-config"
if [[ -x "$ZEEK_CONFIG" ]]; then
  if "$ZEEK_CONFIG" --have-geoip 2>/dev/null | grep -q "yes"; then
    log "Zeek compiled with GeoIP support: OK"
  else
    warn "Zeek reports no GeoIP support. (OBS packages should have it.)"
  fi
fi

# --------------------------
# 4) Configure MaxMind GeoLite2 downloads
# --------------------------
mkdir -p "$MMDB_DIR"
chown root:root "$MMDB_DIR"
chmod 0755 "$MMDB_DIR"

GEOIPCONF="/etc/GeoIP.conf"
if [[ -z "$MAXMIND_ACCOUNT_ID" || -z "$MAXMIND_LICENSE_KEY" ]]; then
  warn "MAXMIND_ACCOUNT_ID / MAXMIND_LICENSE_KEY not provided."
  warn "Skipping automatic GeoLite2 download. Place GeoLite2-City.mmdb and GeoLite2-ASN.mmdb in $MMDB_DIR manually."
else
  log "Configuring geoipupdate for GeoLite2 City + ASN..."
  install -m 0644 /dev/null "$GEOIPCONF"
  cat > "$GEOIPCONF" <<EOF
# Generated by zeek-install-geoip.sh
AccountID $MAXMIND_ACCOUNT_ID
LicenseKey $MAXMIND_LICENSE_KEY
EditionIDs GeoLite2-City GeoLite2-ASN
DatabaseDirectory $MMDB_DIR
EOF
  geoipupdate || die "geoipupdate failed. Check your MaxMind credentials / firewall."
fi

# --------------------------
# 5) Configure Zeek mmdb directory & geo enrichment for conn.log
# --------------------------
# Zeek site config path (OBS packages install to /opt/zeek)
ZEEK_PREFIX="/opt/zeek"
SITE_DIR="$ZEEK_PREFIX/share/zeek/site"
LOCAL_ZEEK="$SITE_DIR/local.zeek"

mkdir -p "$SITE_DIR"

# Ensure Zeek looks in our MMDB_DIR. (mmdb_dir is a redefinable option.)
append_once "redef mmdb_dir = \"$MMDB_DIR\";" "$LOCAL_ZEEK"

# Install Zeek Package Manager package for conn.log geodata enrichment.
# This adds nested 'geo' details (country, region, city, lat/lon, ASN, org) to conn.log.
if ! command -v zkg >/dev/null 2>&1; then
  ln -sf "$ZEEK_PREFIX/bin/zkg" /usr/local/bin/zkg || true
fi

# Also add zeek and zeek-config to PATH for convenience
if ! command -v zeek >/dev/null 2>&1; then
  ln -sf "$ZEEK_PREFIX/bin/zeek" /usr/local/bin/zeek || true
fi
if ! command -v zeek-config >/dev/null 2>&1; then
  ln -sf "$ZEEK_PREFIX/bin/zeek-config" /usr/local/bin/zeek-config || true
fi

log "Installing geoip-conn package with zkg..."
# Initialize zkg if first run; skip tests for speed & headless envs.
zkg autoconfig || true
zkg install --force --skiptests geoip-conn || true

# Load the package from local.zeek (zkg installs under packages/)
append_once "@load packages/geoip-conn" "$LOCAL_ZEEK"

# Configure Zeek to output logs in JSON format (easier to parse)
log "Configuring JSON log output format..."
append_once "@load policy/tuning/json-logs.zeek" "$LOCAL_ZEEK"

# --------------------------
# 6) Configure interface (node.cfg)
# --------------------------
NODECFG="$ZEEK_PREFIX/etc/node.cfg"
if [[ -z "$IFACE" ]]; then
  IFACE="$(detect_iface || true)"
fi
if [[ -z "$IFACE" ]]; then
  warn "Could not auto-detect an active NIC. Edit $NODECFG later and set your interface."
  IFACE="eth0"
fi

mkdir -p "$ZEEK_PREFIX/etc"
cat > "$NODECFG" <<EOF
[zeek]
type=standalone
host=localhost
interface=$IFACE
EOF

# --------------------------
# 7) Deploy Zeek
# --------------------------
log "Deploying Zeek via zeekctl..."
"$ZEEK_PREFIX/bin/zeekctl" deploy || die "zeekctl deploy failed"

# --------------------------
# 8) Smoke tests
# --------------------------
log "Running quick GeoIP lookup test..."
if "$ZEEK_PREFIX/bin/zeek" -e 'print lookup_location(8.8.8.8);' 2>&1 | grep -qi "Failed to open GeoIP"; then
  warn "GeoIP DB not found by Zeek. Ensure .mmdb files exist in $MMDB_DIR and Zeek has read access."
else
  log "GeoIP lookup works."
fi

log "Done. Logs: $ZEEK_PREFIX/logs/current/"
log "Check conn.log for geo fields (package 'geoip-conn')."
